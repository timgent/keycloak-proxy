

# is the url for retrieve the openid configuration - normally the <server>/auth/realm/<realm_name>
discovery-url: https://keycloak.example.com/auth/realms/commons
# the client id for the 'client' application
clientid: <CLIENT_ID>
# the secret associated to the 'client' application
secret: <CLIENT_SECRET>
# the interface definition you wish the proxy to listen, all interfaces is specified as ':<port>'
listen: 127.0.0.1:3000
# whether to request offline access and use a refresh token
refresh-sessions: true
# assuming you are using refresh tokens, specify the maximum amount of time the refresh token can last
max-session: 1h
# log all incoming requests
log-requests: true
# log in json format
log-json-format: true
# do not redirec the request, simple 307 it
no-redirects: false
# the location of a certificate you wish the proxy to use for TLS support
tls-cert:
# the location of a private key for TLS
tls-private-key:
# the public key for the ca, used for mutual TLS
tls-ca-certificate:
# the redirection url, essentially the site url, note: /oauth/callback is added at the end
redirection-url: http://127.0.0.3000
# the encryption key used to encode the session state
encryption-key: AgXa7xRcoClDEU0ZDSH4X0XhL5Qy2Z2j
# the upstream endpoint which we should proxy request
upstream: http://127.0.0.1:80
# upstream-keepalives specified wheather you want keepalive on the upstream endpoint
upstream-keepalives: true
# additional scopes to add to add to the default (openid+email+profile)
scopes:
  - vpn-user
# enables a more extra secuirty features
enable-security-filter: true
# a map of claims that MUST exist in the token presented and the value is it MUST match
# So for example, you could match the audience or the issuer or some custom attribute
claims:
  aud: openvpn
  iss: https://keycloak.example.com/auth/realms/commons
# a collection of resource i.e. urls that you wish to protect
resources:
  - url: /admin/test
    # the methods on this url that should be protected, if missing, we assuming all
    methods:
      - GET
    # a list of roles the user must have in order to accces urls under the above
    roles:
      - openvpn:vpn-user
      - openvpn:prod-vpn
  - url: /admin/white_listed
    # permits a url prefix through, bypassing the admission controls
    white-listed: true
  - url: /admin
    methods:
      - GET
    roles:
      - openvpn:vpn-user
      - openvpn:prod-vpn

# set the cross origin resource sharing headers
cors:
  # an array of origins (Access-Control-Allow-Origin)
  origins: []
  # an array of headers to apply (Access-Control-Allow-Headers)
  headers: []
  # an array of expose headers (Access-Control-Expose-Headers)
  exposed-headers: []
  # an array of methods (Access-Control-Allow-Methods)
  methods: []
  # the credentials flag (Access-Control-Allow-Credentials)
  credentials: true|false
  # the max age (Access-Control-Max-Age)
  max-age: 1h

